outputhat23=16
treein = 0
compacttree = 0
stacksize: 8192 kb
nalphabets = 256
Score(s=0x73,s=0x73)=1.500000
Score(u=0x75,s=0x73)=1.000000
Score(p=0x70,s=0x73)=1.000000
Score(m=0x6d,s=0x73)=1.000000
Score(f=0x66,s=0x73)=1.000000
Score(d=0x64,s=0x73)=1.000000
Score(s=0x73,u=0x75)=1.000000
Score(u=0x75,u=0x75)=1.500000
Score(p=0x70,u=0x75)=1.000000
Score(m=0x6d,u=0x75)=1.000000
Score(f=0x66,u=0x75)=1.000000
Score(d=0x64,u=0x75)=1.000000
Score(s=0x73,p=0x70)=1.000000
Score(u=0x75,p=0x70)=1.000000
Score(p=0x70,p=0x70)=1.500000
Score(m=0x6d,p=0x70)=1.000000
Score(f=0x66,p=0x70)=1.000000
Score(d=0x64,p=0x70)=1.000000
Score(s=0x73,m=0x6d)=1.000000
Score(u=0x75,m=0x6d)=1.000000
Score(p=0x70,m=0x6d)=1.000000
Score(m=0x6d,m=0x6d)=1.500000
Score(f=0x66,m=0x6d)=1.000000
Score(d=0x64,m=0x6d)=1.000000
Score(s=0x73,f=0x66)=1.000000
Score(u=0x75,f=0x66)=1.000000
Score(p=0x70,f=0x66)=1.000000
Score(m=0x6d,f=0x66)=1.000000
Score(f=0x66,f=0x66)=1.500000
Score(d=0x64,f=0x66)=1.000000
Score(s=0x73,d=0x64)=1.000000
Score(u=0x75,d=0x64)=1.000000
Score(p=0x70,d=0x64)=1.000000
Score(m=0x6d,d=0x64)=1.000000
Score(f=0x66,d=0x64)=1.000000
Score(d=0x64,d=0x64)=1.500000
All-to-all alignment.
    0 / 20    1 / 20maxwm <- 0.0 
maxwm <- 0.0 
    2 / 20maxwm <- 0.0 
maxwm <- 0.0 
maxwm <- 0.0 
    3 / 20maxwm <- 0.0 
maxwm <- 0.0 
    4 / 20maxwm <- 0.0 
maxwm <- 0.0 
maxwm <- 0.0 
    5 / 20    6 / 20    7 / 20    8 / 20    9 / 20   10 / 20   11 / 20   12 / 20   13 / 20   14 / 20   15 / 20   16 / 20   17 / 20   18 / 20tbfast-pair (text) Version 7.453
alg=L, model=Extended, 2.00, -0.00, +0.10, noshift, amax=0.0
0 thread(s)

outputhat23=16
Loading 'hat3.seed' ... 
done.
Writing hat3 for iterative refinement
nalphabets = 256
Score(s=0x73,s=0x73)=1.500000
Score(u=0x75,s=0x73)=1.000000
Score(p=0x70,s=0x73)=1.000000
Score(m=0x6d,s=0x73)=1.000000
Score(f=0x66,s=0x73)=1.000000
Score(d=0x64,s=0x73)=1.000000
Score(s=0x73,u=0x75)=1.000000
Score(u=0x75,u=0x75)=1.500000
Score(p=0x70,u=0x75)=1.000000
Score(m=0x6d,u=0x75)=1.000000
Score(f=0x66,u=0x75)=1.000000
Score(d=0x64,u=0x75)=1.000000
Score(s=0x73,p=0x70)=1.000000
Score(u=0x75,p=0x70)=1.000000
Score(p=0x70,p=0x70)=1.500000
Score(m=0x6d,p=0x70)=1.000000
Score(f=0x66,p=0x70)=1.000000
Score(d=0x64,p=0x70)=1.000000
Score(s=0x73,m=0x6d)=1.000000
Score(u=0x75,m=0x6d)=1.000000
Score(p=0x70,m=0x6d)=1.000000
Score(m=0x6d,m=0x6d)=1.500000
Score(f=0x66,m=0x6d)=1.000000
Score(d=0x64,m=0x6d)=1.000000
Score(s=0x73,f=0x66)=1.000000
Score(u=0x75,f=0x66)=1.000000
Score(p=0x70,f=0x66)=1.000000
Score(m=0x6d,f=0x66)=1.000000
Score(f=0x66,f=0x66)=1.500000
Score(d=0x64,f=0x66)=1.000000
Score(s=0x73,d=0x64)=1.000000
Score(u=0x75,d=0x64)=1.000000
Score(p=0x70,d=0x64)=1.000000
Score(m=0x6d,d=0x64)=1.000000
Score(f=0x66,d=0x64)=1.000000
Score(d=0x64,d=0x64)=1.500000
Gap Penalty = -1.53, +0.00, +0.00
tbutree = 1, compacttree = 0
Constructing a UPGMA tree ... 
    0 / 20   10 / 20
done.

Progressive alignment ... 
STEP     1 /19 STEP     2 /19 STEP     3 /19 STEP     4 /19 STEP     5 /19 STEP     6 /19 STEP     7 /19 STEP     8 /19 STEP     9 /19 
Reallocating..done. *alloclen = 1044
STEP    10 /19 STEP    11 /19 STEP    12 /19 STEP    13 /19 STEP    14 /19 STEP    15 /19 STEP    16 /19 STEP    17 /19 STEP    18 /19 STEP    19 /19 
done.
tbfast (text) Version 7.453
alg=A, model=Extended, 1.53, -0.00, -0.00, noshift, amax=0.0
1 thread(s)

minimumweight = 0.000010
autosubalignment = 0.000000
nthread = 0
randomseed = 0
blosum -2 / kimura 200
poffset = 0
niter = 16
sueff_global = 0.100000
nadd = 16
Loading 'hat3' ... done.
nalphabets = 256
Score(s=0x73,s=0x73)=1.500000
Score(u=0x75,s=0x73)=1.000000
Score(p=0x70,s=0x73)=1.000000
Score(m=0x6d,s=0x73)=1.000000
Score(f=0x66,s=0x73)=1.000000
Score(d=0x64,s=0x73)=1.000000
Score(s=0x73,u=0x75)=1.000000
Score(u=0x75,u=0x75)=1.500000
Score(p=0x70,u=0x75)=1.000000
Score(m=0x6d,u=0x75)=1.000000
Score(f=0x66,u=0x75)=1.000000
Score(d=0x64,u=0x75)=1.000000
Score(s=0x73,p=0x70)=1.000000
Score(u=0x75,p=0x70)=1.000000
Score(p=0x70,p=0x70)=1.500000
Score(m=0x6d,p=0x70)=1.000000
Score(f=0x66,p=0x70)=1.000000
Score(d=0x64,p=0x70)=1.000000
Score(s=0x73,m=0x6d)=1.000000
Score(u=0x75,m=0x6d)=1.000000
Score(p=0x70,m=0x6d)=1.000000
Score(m=0x6d,m=0x6d)=1.500000
Score(f=0x66,m=0x6d)=1.000000
Score(d=0x64,m=0x6d)=1.000000
Score(s=0x73,f=0x66)=1.000000
Score(u=0x75,f=0x66)=1.000000
Score(p=0x70,f=0x66)=1.000000
Score(m=0x6d,f=0x66)=1.000000
Score(f=0x66,f=0x66)=1.500000
Score(d=0x64,f=0x66)=1.000000
Score(s=0x73,d=0x64)=1.000000
Score(u=0x75,d=0x64)=1.000000
Score(p=0x70,d=0x64)=1.000000
Score(m=0x6d,d=0x64)=1.000000
Score(f=0x66,d=0x64)=1.000000
Score(d=0x64,d=0x64)=1.500000

    0 / 20   10 / 20
Segment   1/  1    1-  50
STEP 001-001-0  identical.   STEP 001-001-1  identical.   STEP 001-002-0  identical.   STEP 001-002-1  identical.   STEP 001-003-0  identical.   STEP 001-003-1  identical.   STEP 001-004-0  identical.   STEP 001-004-1  accepted.STEP 001-005-0  identical.   STEP 001-005-1  identical.   STEP 001-006-0  accepted.STEP 001-006-1  identical.   STEP 001-007-0  identical.   STEP 001-007-1  accepted.STEP 001-008-0  identical.   STEP 001-008-1  identical.   STEP 001-009-0  identical.   STEP 001-009-1  identical.   STEP 001-010-0  identical.   STEP 001-010-1  identical.   STEP 001-011-0  identical.   STEP 001-011-1  identical.   STEP 001-012-0  identical.   STEP 001-012-1  identical.   STEP 001-013-0  identical.   STEP 001-013-1  identical.   STEP 001-014-0  accepted.STEP 001-014-1  accepted.STEP 001-015-0  identical.   STEP 001-015-1  identical.   STEP 001-016-0  identical.   STEP 001-016-1  rejected.STEP 001-017-0  rejected.STEP 001-017-1  rejected.STEP 001-018-0  identical.   STEP 001-018-1  accepted.STEP 001-019-1  identical.   STEP 002-019-1  identical.   STEP 002-018-0  identical.   STEP 002-018-1  identical.   STEP 002-017-0  rejected.STEP 002-017-1  rejected.STEP 002-016-0  identical.   STEP 002-016-1  accepted.STEP 002-015-0  identical.   STEP 002-015-1  identical.   STEP 002-014-0  accepted.STEP 002-014-1  accepted.STEP 002-013-0  identical.   STEP 002-013-1  identical.   STEP 002-012-0  identical.   STEP 002-012-1  identical.   STEP 002-011-0  identical.   STEP 002-011-1  rejected.STEP 002-010-0  identical.   STEP 002-010-1  identical.   STEP 002-009-0  identical.   STEP 002-009-1  identical.   STEP 002-008-0  identical.   STEP 002-008-1  identical.   STEP 002-007-0  identical.   STEP 002-007-1  identical.   STEP 002-006-0  identical.   STEP 002-006-1  identical.   STEP 002-005-0  identical.   STEP 002-005-1  identical.   STEP 002-004-0  identical.   STEP 002-004-1  identical.   STEP 002-003-0  identical.   STEP 002-003-1  identical.   STEP 002-002-0  identical.   STEP 002-002-1  identical.   STEP 002-001-0  identical.   STEP 002-001-1  identical.   STEP 003-001-0  identical.   STEP 003-001-1  identical.   STEP 003-002-0  identical.   STEP 003-002-1  identical.   STEP 003-003-0  identical.   STEP 003-003-1  identical.   STEP 003-004-0  identical.   STEP 003-004-1  identical.   STEP 003-005-0  identical.   STEP 003-005-1  identical.   STEP 003-006-0  identical.   STEP 003-006-1  identical.   STEP 003-007-0  identical.   STEP 003-007-1  identical.   
Converged.

done
dvtditr (text) Version 7.453
alg=A, model=Extended, 1.53, -0.00, -0.00, noshift, amax=0.0
0 thread(s)


Strategy:
 L-INS-i (Probably most accurate, very slow)
 Iterative refinement method (<16) with LOCAL pairwise alignment information

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.

