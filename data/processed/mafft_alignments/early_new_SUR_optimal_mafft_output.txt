outputhat23=16
treein = 0
compacttree = 0
stacksize: 8192 kb
nalphabets = 256
Score(s=0x73,s=0x73)=2.000000
Score(u=0x75,s=0x73)=0.500000
Score(p=0x70,s=0x73)=0.500000
Score(m=0x6d,s=0x73)=1.250000
Score(f=0x66,s=0x73)=0.500000
Score(d=0x64,s=0x73)=1.250000
Score(s=0x73,u=0x75)=0.500000
Score(u=0x75,u=0x75)=2.000000
Score(p=0x70,u=0x75)=1.250000
Score(m=0x6d,u=0x75)=0.500000
Score(f=0x66,u=0x75)=1.250000
Score(d=0x64,u=0x75)=0.500000
Score(s=0x73,p=0x70)=0.500000
Score(u=0x75,p=0x70)=1.250000
Score(p=0x70,p=0x70)=2.000000
Score(m=0x6d,p=0x70)=0.500000
Score(f=0x66,p=0x70)=1.250000
Score(d=0x64,p=0x70)=0.500000
Score(s=0x73,m=0x6d)=1.250000
Score(u=0x75,m=0x6d)=0.500000
Score(p=0x70,m=0x6d)=0.500000
Score(m=0x6d,m=0x6d)=2.000000
Score(f=0x66,m=0x6d)=0.500000
Score(d=0x64,m=0x6d)=1.250000
Score(s=0x73,f=0x66)=0.500000
Score(u=0x75,f=0x66)=1.250000
Score(p=0x70,f=0x66)=1.250000
Score(m=0x6d,f=0x66)=0.500000
Score(f=0x66,f=0x66)=2.000000
Score(d=0x64,f=0x66)=0.500000
Score(s=0x73,d=0x64)=1.250000
Score(u=0x75,d=0x64)=0.500000
Score(p=0x70,d=0x64)=0.500000
Score(m=0x6d,d=0x64)=1.250000
Score(f=0x66,d=0x64)=0.500000
Score(d=0x64,d=0x64)=2.000000
All-to-all alignment.
    0 / 24    1 / 24    2 / 24    3 / 24    4 / 24    5 / 24    6 / 24    7 / 24    8 / 24    9 / 24   10 / 24   11 / 24   12 / 24   13 / 24   14 / 24   15 / 24   16 / 24   17 / 24   18 / 24   19 / 24   20 / 24   21 / 24   22 / 24tbfast-pair (text) Version 7.453
alg=L, model=Extended, 2.00, -0.10, +0.10, noshift, amax=0.0
0 thread(s)

outputhat23=16
Loading 'hat3.seed' ... 
done.
Writing hat3 for iterative refinement
nalphabets = 256
Score(s=0x73,s=0x73)=2.000000
Score(u=0x75,s=0x73)=0.500000
Score(p=0x70,s=0x73)=0.500000
Score(m=0x6d,s=0x73)=1.250000
Score(f=0x66,s=0x73)=0.500000
Score(d=0x64,s=0x73)=1.250000
Score(s=0x73,u=0x75)=0.500000
Score(u=0x75,u=0x75)=2.000000
Score(p=0x70,u=0x75)=1.250000
Score(m=0x6d,u=0x75)=0.500000
Score(f=0x66,u=0x75)=1.250000
Score(d=0x64,u=0x75)=0.500000
Score(s=0x73,p=0x70)=0.500000
Score(u=0x75,p=0x70)=1.250000
Score(p=0x70,p=0x70)=2.000000
Score(m=0x6d,p=0x70)=0.500000
Score(f=0x66,p=0x70)=1.250000
Score(d=0x64,p=0x70)=0.500000
Score(s=0x73,m=0x6d)=1.250000
Score(u=0x75,m=0x6d)=0.500000
Score(p=0x70,m=0x6d)=0.500000
Score(m=0x6d,m=0x6d)=2.000000
Score(f=0x66,m=0x6d)=0.500000
Score(d=0x64,m=0x6d)=1.250000
Score(s=0x73,f=0x66)=0.500000
Score(u=0x75,f=0x66)=1.250000
Score(p=0x70,f=0x66)=1.250000
Score(m=0x6d,f=0x66)=0.500000
Score(f=0x66,f=0x66)=2.000000
Score(d=0x64,f=0x66)=0.500000
Score(s=0x73,d=0x64)=1.250000
Score(u=0x75,d=0x64)=0.500000
Score(p=0x70,d=0x64)=0.500000
Score(m=0x6d,d=0x64)=1.250000
Score(f=0x66,d=0x64)=0.500000
Score(d=0x64,d=0x64)=2.000000
Gap Penalty = -1.53, +0.00, +0.00
tbutree = 1, compacttree = 0
Constructing a UPGMA tree ... 
    0 / 24   10 / 24   20 / 24
done.

Progressive alignment ... 
STEP     1 /23 STEP     2 /23 STEP     3 /23 STEP     4 /23 STEP     5 /23 STEP     6 /23 STEP     7 /23 STEP     8 /23 STEP     9 /23 STEP    10 /23 STEP    11 /23 STEP    12 /23 STEP    13 /23 STEP    14 /23 STEP    15 /23 STEP    16 /23 STEP    17 /23 STEP    18 /23 
Reallocating..done. *alloclen = 1042
STEP    19 /23 STEP    20 /23 STEP    21 /23 STEP    22 /23 STEP    23 /23 
done.
tbfast (text) Version 7.453
alg=A, model=Extended, 1.53, -0.00, -0.00, noshift, amax=0.0
1 thread(s)

minimumweight = 0.000010
autosubalignment = 0.000000
nthread = 0
randomseed = 0
blosum -2 / kimura 200
poffset = 0
niter = 16
sueff_global = 0.100000
nadd = 16
Loading 'hat3' ... done.
nalphabets = 256
Score(s=0x73,s=0x73)=2.000000
Score(u=0x75,s=0x73)=0.500000
Score(p=0x70,s=0x73)=0.500000
Score(m=0x6d,s=0x73)=1.250000
Score(f=0x66,s=0x73)=0.500000
Score(d=0x64,s=0x73)=1.250000
Score(s=0x73,u=0x75)=0.500000
Score(u=0x75,u=0x75)=2.000000
Score(p=0x70,u=0x75)=1.250000
Score(m=0x6d,u=0x75)=0.500000
Score(f=0x66,u=0x75)=1.250000
Score(d=0x64,u=0x75)=0.500000
Score(s=0x73,p=0x70)=0.500000
Score(u=0x75,p=0x70)=1.250000
Score(p=0x70,p=0x70)=2.000000
Score(m=0x6d,p=0x70)=0.500000
Score(f=0x66,p=0x70)=1.250000
Score(d=0x64,p=0x70)=0.500000
Score(s=0x73,m=0x6d)=1.250000
Score(u=0x75,m=0x6d)=0.500000
Score(p=0x70,m=0x6d)=0.500000
Score(m=0x6d,m=0x6d)=2.000000
Score(f=0x66,m=0x6d)=0.500000
Score(d=0x64,m=0x6d)=1.250000
Score(s=0x73,f=0x66)=0.500000
Score(u=0x75,f=0x66)=1.250000
Score(p=0x70,f=0x66)=1.250000
Score(m=0x6d,f=0x66)=0.500000
Score(f=0x66,f=0x66)=2.000000
Score(d=0x64,f=0x66)=0.500000
Score(s=0x73,d=0x64)=1.250000
Score(u=0x75,d=0x64)=0.500000
Score(p=0x70,d=0x64)=0.500000
Score(m=0x6d,d=0x64)=1.250000
Score(f=0x66,d=0x64)=0.500000
Score(d=0x64,d=0x64)=2.000000

    0 / 24   10 / 24   20 / 24
Segment   1/  1    1-  45
STEP 001-001-0  identical.   STEP 001-001-1  identical.   STEP 001-002-0  identical.   STEP 001-002-1  identical.   STEP 001-003-0  identical.   STEP 001-003-1  identical.   STEP 001-004-0  identical.   STEP 001-004-1  identical.   STEP 001-005-0  identical.   STEP 001-005-1  identical.   STEP 001-006-0  identical.   STEP 001-006-1  identical.   STEP 001-007-0  identical.   STEP 001-007-1  identical.   STEP 001-008-0  identical.   STEP 001-008-1  identical.   STEP 001-009-0  identical.   STEP 001-009-1  identical.   STEP 001-010-0  identical.   STEP 001-010-1  identical.   STEP 001-011-0  identical.   STEP 001-011-1  identical.   STEP 001-012-0  identical.   STEP 001-012-1  identical.   STEP 001-013-0  identical.   STEP 001-013-1  identical.   STEP 001-014-0  rejected.STEP 001-014-1  identical.   STEP 001-015-0  identical.   STEP 001-015-1  rejected.STEP 001-016-0  identical.   STEP 001-016-1  identical.   STEP 001-017-0  identical.   STEP 001-017-1  identical.   STEP 001-018-0  identical.   STEP 001-018-1  rejected.STEP 001-019-0  identical.   STEP 001-019-1  identical.   STEP 001-020-0  identical.   STEP 001-020-1  identical.   STEP 001-021-0  rejected.STEP 001-021-1  rejected.STEP 001-022-0  identical.   STEP 001-022-1  rejected.STEP 001-023-1  identical.   STEP 002-023-1  identical.   STEP 002-022-0  identical.   STEP 002-022-1  rejected.
Converged.

done
dvtditr (text) Version 7.453
alg=A, model=Extended, 1.53, -0.00, -0.00, noshift, amax=0.0
0 thread(s)


Strategy:
 L-INS-i (Probably most accurate, very slow)
 Iterative refinement method (<16) with LOCAL pairwise alignment information

If unsure which option to use, try 'mafft --auto input > output'.
For more information, see 'mafft --help', 'mafft --man' and the mafft page.

The default gap scoring scheme has been changed in version 7.110 (2013 Oct).
It tends to insert more gaps into gap-rich regions than previous versions.
To disable this change, add the --leavegappyregion option.

